# - Find PlaybackLib
# Find the PlaybackLib headers and libraries.
#
#  PLAYBACKLIB_INCLUDE_DIR -  where to find PlaybackLib header files
#  PLAYBACKLIB_LIBRARIES    - List of libraries when using PlaybackLib
#  PLAYBACKLIB_FOUND        - True if PlaybackLib found

GET_FILENAME_COMPONENT(module_file_path ${CMAKE_CURRENT_LIST_FILE} PATH )

# Look for the header file.
FIND_PATH(PLAYBACKLIB_INCLUDE_DIR NAMES Playback.h 
                                  PATHS ../../PlaybackLib )

# Look for the library.
SET( PLAYBACK_NAME PlaybackLib )

FIND_LIBRARY(PLAYBACKLIB_LIBRARY NAMES ${PLAYBACK_NAME}
                                 PATHS ../../PlaybackLib/Release )

FIND_LIBRARY(PLAYBACKLIB_DEBUG_LIBRARY NAMES ${PLAYBACK_NAME}
                                       PATHS ../../PlaybackLib/Debug )

IF(PLAYBACKLIB_LIBRARY OR PLAYBACKLIB_DEBUG_LIBRARY)
  SET( HAVE_PLAYBACKLIB_LIBRARY 1 )
ELSE(PLAYBACKLIB_LIBRARY OR PLAYBACKLIB_DEBUG_LIBRARY)
  SET( HAVE_PLAYBACKLIB_LIBRARY 0 )
ENDIF(PLAYBACKLIB_LIBRARY OR PLAYBACKLIB_DEBUG_LIBRARY)

# Copy the results to the output variables.
IF(PLAYBACKLIB_INCLUDE_DIR AND HAVE_PLAYBACKLIB_LIBRARY )

  SET(PLAYBACKLIB_FOUND 1)
  IF(PLAYBACKLIB_LIBRARY)
    SET(PLAYBACKLIB_LIBRARIES optimized ${PLAYBACKLIB_LIBRARY} )
  ELSE(PLAYBACKLIB_LIBRARY)
    SET(PLAYBACKLIB_LIBRARIES optimized ${PLAYBACKLIB_NAME} )
    MESSAGE( STATUS, "PlaybackLib release libraries not found. Release build might not work." )
  ENDIF(PLAYBACKLIB_LIBRARY)

  IF(PLAYBACKLIB_DEBUG_LIBRARY)
    SET(PLAYBACKLIB_LIBRARIES ${PLAYBACKLIB_LIBRARIES} debug ${PLAYBACKLIB_DEBUG_LIBRARY} )
  ELSE(PLAYBACKLIB_DEBUG_LIBRARY)
    SET(PLAYBACKLIB_LIBRARIES ${PLAYBACKLIB_LIBRARIES} debug ${PLAYBACKLIB_NAME}_d )
    MESSAGE( STATUS, "PlaybackLib debug libraries not found. Debug build might not work." )
  ENDIF(PLAYBACKLIB_DEBUG_LIBRARY)
  
  SET(PLAYBACKLIB_INCLUDE_DIR ${PLAYBACKLIB_INCLUDE_DIR} )
  SET(PLAYBACKLIB_LIBRARIES ${PLAYBACKLIB_LIBRARIES} ${PTHREAD_LIBRARIES} )

ELSE(PLAYBACKLIB_INCLUDE_DIR AND HAVE_PLAYBACKLIB_LIBRARY )
  SET(PLAYBACKLIB_FOUND 0)
  SET(PLAYBACKLIB_LIBRARIES)
  SET(PLAYBACKLIB_INCLUDE_DIR)
ENDIF(PLAYBACKLIB_INCLUDE_DIR AND HAVE_PLAYBACKLIB_LIBRARY )

# Report the results.
IF(NOT PLAYBACKLIB_FOUND)
  SET(PLAYBACKLIB_DIR_MESSAGE
    "PLAYBACKLIB was not found. Make sure PLAYBACKLIB_LIBRARY ( and/or PLAYBACKLIB_DEBUG_LIBRARY ) and PLAYBACKLIB_INCLUDE_DIR are set.")
  IF(PlaybackLib_FIND_REQUIRED)
    MESSAGE(FATAL_ERROR "${PLAYBACKLIB_DIR_MESSAGE}")
  ELSEIF(NOT PlaybackLib_FIND_QUIETLY)
    MESSAGE(STATUS "${PLAYBACKLIB_DIR_MESSAGE}")
  ENDIF(PlaybackLib_FIND_REQUIRED)
ENDIF(NOT PLAYBACKLIB_FOUND)
